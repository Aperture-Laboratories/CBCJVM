package cbccore.sensors.buttons;

import cbccore.events.Event;
import cbccore.events.EventEmitter;

public class ButtonEmitter extends EventEmitter implements Runnable {
	public class AButtonPressed extends Event {}
	public class BButtonPressed extends Event {}
	public class BlackButtonPressed extends Event {}
	public class DownButtonPressed extends Event {}
	public class UpButtonPressed extends Event {}
	public class LeftButtonPressed extends Event {}
	public class RightButtonPressed extends Event {}
	
	public class AButtonReleased extends Event {}
	public class BButtonReleased extends Event {}
	public class BlackButtonReleased extends Event {}
	public class DownButtonReleased extends Event {}
	public class UpButtonReleased extends Event {}
	public class LeftButtonReleased extends Event {}
	public class RightButtonReleased extends Event {}
	
	private AButton aButton = new AButton();
	private BButton bButton = new BButton();
	private BlackButton blackButton = new BlackButton();
	private DownButton downButton = new DownButton();
	private UpButton upButton = new UpButton();
	private LeftButton leftButton = new LeftButton();
	private RightButton rightButton = new RightButton();
	
	private boolean aButtonState = false;
	private boolean bButtonState = false;
	private boolean blackButtonState = false;
	private boolean downButtonState = false;
	private boolean upButtonState = false;
	private boolean leftButtonState = false;
	private boolean rightButtonState = false;
	
	@Override
	public void run() {
		boolean newState = aButton.getValue();
		if(newState != aButtonState) {
			if(newState) {
				emit(new AButtonPressed());
			} else {
				emit(new AButtonReleased());
			}
			aButtonState = newState;
		}
		newState = bButton.getValue();
		if(newState != bButtonState) {
			if(newState) {
				emit(new BButtonPressed());
			} else {
				emit(new BButtonReleased());
			}
			bButtonState = newState;
		}
		newState = blackButton.getValue();
		if(newState != blackButtonState) {
			if(newState) {
				emit(new BlackButtonPressed());
			} else {
				emit(new BlackButtonReleased());
			}
			blackButtonState = newState;
		}
		newState = downButton.getValue();
		if(newState != downButtonState) {
			if(newState) {
				emit(new DownButtonPressed());
			} else {
				emit(new DownButtonReleased());
			}
			downButtonState = newState;
		}
		newState = aButton.getValue();
		if(newState != aButtonState) {
			if(newState) {
				emit(new AButtonPressed());
			} else {
				emit(new AButtonReleased());
			}
			aButtonState = newState;
		}
		newState = aButton.getValue();
		if(newState != aButtonState) {
			if(newState) {
				emit(new AButtonPressed());
			} else {
				emit(new AButtonReleased());
			}
			aButtonState = newState;
		}
	}
}
