package cbctools.jar.cbc;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.lang.reflect.InvocationTargetException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.StringTokenizer;

import cbccore.Device;

public class Main {
	ServerSocket server = null;
	Socket client = null;
	InputStream inStream;
	OutputStream outStream;
	DataInputStream inDataStream;
	DataOutputStream outDataStream;
	public Main() {
		
	}
	public static void main(String[] args) {
		try {
			new Main().run();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	public void run() throws IOException {
		server = new ServerSocket(84110);
		System.out.println("Awaiting connections...");
		client = server.accept();
		System.out.println("Connected to client!");
		outStream = client.getOutputStream();
		inStream = client.getInputStream();
		outDataStream = new DataOutputStream(outStream);
		inDataStream = new DataInputStream(inStream);
		String recv = "";
		while(!recv.equals("exit")) {
			recv = inDataStream.readUTF();
			if(recv.equals("listJars")) {
				File libs = new File("/mnt/user/libs");
				String[] jars = libs.list();
				for(String jar : jars) {
					outDataStream.writeUTF(jar);
				}
				continue;
			}
			if(recv.startsWith("delete")) {
				File lib = new File("/mnt/user/libs/" + recv.substring(6));
				if(lib.delete()) {
					outDataStream.writeUTF("Success");
				} else {
					outDataStream.writeUTF("Failure");
				}
				continue;
			}
			if(recv.startsWith("transfer")) {
				recv = recv.substring(7);
				File lib = new File("/mnt/user/libs/" + recv);
				lib.createNewFile();
				new DataOutputStream(new FileOutputStream(lib)).writeBytes(s);
				continue;
			}
		}
		try {
			client.close();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
	}
}
