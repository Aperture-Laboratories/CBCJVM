

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;

public class Main {
	ServerSocket server = null;
	Socket client = null;
	InputStream inStream;
	OutputStream outStream;
	DataInputStream inDataStream;
	DataOutputStream outDataStream;
	public Main() {
		
	}
	public static void main(String[] args) {
		try {
			new Main().run();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	public void run() throws IOException {
		server = new ServerSocket(8411);
		System.out.println("Awaiting connections...");
		client = server.accept();
		System.out.println("Connected to client!");
		outStream = client.getOutputStream();
		inStream = client.getInputStream();
		outDataStream = new DataOutputStream(outStream);
		inDataStream = new DataInputStream(inStream);
		String recv = "";
		while(!recv.equals("exit")) {
			recv = inDataStream.readUTF();
			if(recv.equals("listJars")) {
				File libs = new File("/mnt/user/lib");
				String[] jars = libs.list();
				for(String jar : jars) {
					outDataStream.writeUTF(jar);
				}
				continue;
			}
			if(recv.startsWith("delete ")) {
				recv = recv.substring(7);
				System.out.println("Deleting " + recv);
				new File("/mnt/user/lib/" + recv).delete();
				continue;
			}
			if(recv.startsWith("transfer ")) {
				recv = recv.substring(8);
				System.out.println("Creating new file " + recv);
				File lib = new File("/mnt/user/lib/" + recv);
				lib.createNewFile();
				System.out.println("\tTransfering...");
				while(inStream.available() < 1);
				byte[] in = new byte[inStream.available()];
				inStream.read(in);
				new FileOutputStream(lib).write(in);
				System.out.println("\tTDone!");
				continue;
			}
		}
		System.out.println("Terminated. CBC Restarting in 5 seconds.");
		client.close();
	}
}
